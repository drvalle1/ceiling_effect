var.betas=var.betas,ngibbs=ngibbs)
store.betas=mod$betas
store.others=cbind(mod$sig2,mod$mu,mod$tau2)
round(cor(store.betas),2)
par(mfrow=c(3,2))
param.true=c(betas.true,gammas.true)
for (i in 1:ncol(store.betas)){
plot(store.betas[,i],type='l')
abline(h=param.true[i],col='red')
}
set.seed(101)
nobs=100
ceil1=6
floor1=0
mu.true=mu=5
tau2.true=tau2=3
sig2.true=sig2=0.3
#generate pre-scores
pr=pr.true=rnorm(nobs,mean=mu,sd=sqrt(tau2))
cond=pr>ceil1;  sum(cond); pr[cond]=ceil1
cond=pr<floor1; sum(cond); pr[cond]=floor1
#generate xmat
uniq=matrix(c(0,0,1,0,0,1),3,2,byrow=T)
ind=sample(1:nrow(uniq),size=nobs,replace=T)
xmat.main=cbind(1,uniq[ind,])
colnames(xmat.main)=c('interc','trat1','trat2')
#generate xmat associated with pr
xmat.interact=cbind(1,xmat.main[,'trat1'])
xmat.pr=xmat.interact*pr
xmat.pr.true=xmat.interact*pr.true
#parameters
betas.true=betas=c(0,0,-0.5)
gammas.true=gammas=c(1,0.2)
#generate data
media=xmat.main%*%betas+xmat.pr.true%*%gammas
po=po.true=rnorm(nobs,mean=media,sd=sqrt(sig2))
cond=po>ceil1;  sum(cond); po[cond]=ceil1
cond=po<floor1; sum(cond); po[cond]=floor1
#final dataset
fim=data.frame(po=po,pr=pr,xmat.main[,-1])
#visualize these results
cores=rep('black',nrow(fim))
cond=fim$trat1==1; cores[cond]='red'
cond=fim$trat2==1; cores[cond]='blue'
rango=c(floor1,ceil1)
plot(fim$pr,fim$po,col=cores,xlim=rango,ylim=rango)
lines(rango,rango,col='grey',lwd=2)
store.betas=mod$betas
store.others=cbind(mod$sig2,mod$mu,mod$tau2)
round(cor(store.betas),2)
par(mfrow=c(3,2))
param.true=c(betas.true,gammas.true)
for (i in 1:ncol(store.betas)){
plot(store.betas[,i],type='l')
abline(h=param.true[i],col='red')
}
par(mfrow=c(2,2))
others.true=c(sig2.true,mu.true,tau2.true)
for (i in 1:ncol(store.others)){
plot(store.others[,i],type='l')
abline(h=others.true[i],col='red')
}
rm(list=ls())
set.seed(101)
nobs=100
ceil1=6
floor1=0
mu.true=mu=5
tau2.true=tau2=3
sig2.true=sig2=0.3
#generate pre-scores
pr=pr.true=rnorm(nobs,mean=mu,sd=sqrt(tau2))
cond=pr>ceil1;  sum(cond); pr[cond]=ceil1
cond=pr<floor1; sum(cond); pr[cond]=floor1
rm(list=ls())
set.seed(101)
nobs=100
ceil1=6
floor1=0
mu.true=mu=5
tau2.true=tau2=3
sig2.true=sig2=0.3
#generate pre-scores
pr=pr.true=rnorm(nobs,mean=mu,sd=sqrt(tau2))
cond=pr>ceil1;  sum(cond); pr[cond]=ceil1
cond=pr<floor1; sum(cond); pr[cond]=floor1
#generate xmat
uniq=expand.grid(trat1=0:1,trat2=0:1,semester=0:1)
cond=uniq$trat1==1 & uniq$trat2==1
uniq=uniq[!cond,]
uniq
rm(list=ls())
set.seed(101)
nobs=100
ceil1=6
floor1=0
mu.true=mu=5
tau2.true=tau2=3
sig2.true=sig2=0.3
#generate pre-scores
pr=pr.true=rnorm(nobs,mean=mu,sd=sqrt(tau2))
cond=pr>ceil1;  sum(cond); pr[cond]=ceil1
cond=pr<floor1; sum(cond); pr[cond]=floor1
#generate xmat
uniq=expand.grid(trat1=0:1,trat2=0:1,semester=0:1)
cond=uniq$trat1==1 & uniq$trat2==1
uniq=uniq[!cond,]
ind=sample(1:nrow(uniq),size=nobs,replace=T)
xmat.main=cbind(1,uniq[ind,])
colnames(xmat.main)[1]='interc'
head(xmat.main)
xmat.interact=cbind(1,xmat.main[,c('trat1','trat2')])
xmat.pr=xmat.interact*pr
xmat.pr.true=xmat.interact*pr.true
head(xmat.interact)
betas.true=betas=c(0,0,-0.5,0.1)
gammas.true=gammas=c(1,0.2,0)
media=xmat.main%*%betas+xmat.pr.true%*%gammas
po=po.true=rnorm(nobs,mean=media,sd=sqrt(sig2))
cond=po>ceil1;  sum(cond); po[cond]=ceil1
cond=po<floor1; sum(cond); po[cond]=floor1
rm(list=ls())
set.seed(101)
nobs=100
ceil1=6
floor1=0
mu.true=mu=5
tau2.true=tau2=3
sig2.true=sig2=0.3
#generate pre-scores
pr=pr.true=rnorm(nobs,mean=mu,sd=sqrt(tau2))
cond=pr>ceil1;  sum(cond); pr[cond]=ceil1
cond=pr<floor1; sum(cond); pr[cond]=floor1
#generate xmat
uniq=expand.grid(trat1=0:1,trat2=0:1,semester=0:1)
cond=uniq$trat1==1 & uniq$trat2==1
uniq=uniq[!cond,]
ind=sample(1:nrow(uniq),size=nobs,replace=T)
xmat.main=cbind(1,uniq[ind,])
colnames(xmat.main)[1]='interc'
#generate xmat associated with pr
xmat.interact=cbind(1,xmat.main[,c('trat1','trat2')])
xmat.pr=xmat.interact*pr
xmat.pr.true=xmat.interact*pr.true
#parameters
betas.true=betas=c(0,0,-0.5,0.1)
gammas.true=gammas=c(1,0.2,0)
class(xmat.main)
rm(list=ls())
set.seed(101)
nobs=100
ceil1=6
floor1=0
mu.true=mu=5
tau2.true=tau2=3
sig2.true=sig2=0.3
#generate pre-scores
pr=pr.true=rnorm(nobs,mean=mu,sd=sqrt(tau2))
cond=pr>ceil1;  sum(cond); pr[cond]=ceil1
cond=pr<floor1; sum(cond); pr[cond]=floor1
#generate xmat
uniq=expand.grid(trat1=0:1,trat2=0:1,semester=0:1)
cond=uniq$trat1==1 & uniq$trat2==1
uniq=uniq[!cond,]
ind=sample(1:nrow(uniq),size=nobs,replace=T)
xmat.main=data.matrix(cbind(1,uniq[ind,]))
colnames(xmat.main)[1]='interc'
#generate xmat associated with pr
xmat.interact=cbind(1,xmat.main[,c('trat1','trat2')])
xmat.pr=xmat.interact*pr
xmat.pr.true=xmat.interact*pr.true
#parameters
betas.true=betas=c(0,0,-0.5,0.1)
gammas.true=gammas=c(1,0.2,0)
#generate data
media=xmat.main%*%betas+xmat.pr.true%*%gammas
po=po.true=rnorm(nobs,mean=media,sd=sqrt(sig2))
cond=po>ceil1;  sum(cond); po[cond]=ceil1
cond=po<floor1; sum(cond); po[cond]=floor1
rm(list=ls())
set.seed(101)
nobs=100
ceil1=6
floor1=0
mu.true=mu=5
tau2.true=tau2=3
sig2.true=sig2=0.3
#generate pre-scores
pr=pr.true=rnorm(nobs,mean=mu,sd=sqrt(tau2))
cond=pr>ceil1;  sum(cond); pr[cond]=ceil1
cond=pr<floor1; sum(cond); pr[cond]=floor1
#generate xmat
uniq=expand.grid(trat1=0:1,trat2=0:1,semester=0:1)
cond=uniq$trat1==1 & uniq$trat2==1
uniq=uniq[!cond,]
ind=sample(1:nrow(uniq),size=nobs,replace=T)
xmat.main=data.matrix(cbind(1,uniq[ind,]))
colnames(xmat.main)[1]='interc'
#generate xmat associated with pr
xmat.interact=cbind(1,xmat.main[,c('trat1','trat2')])
xmat.pr=xmat.interact*pr
xmat.pr.true=xmat.interact*pr.true
#parameters
betas.true=betas=c(0,0,-0.5,0.1)
gammas.true=gammas=c(1,0.2,0)
#generate data
media=xmat.main%*%betas+xmat.pr.true%*%gammas
po=po.true=rnorm(nobs,mean=media,sd=sqrt(sig2))
cond=po>ceil1;  sum(cond); po[cond]=ceil1
cond=po<floor1; sum(cond); po[cond]=floor1
#final dataset
fim=data.frame(po=po,pr=pr,xmat.main[,-1])
#visualize these results
cores=rep('black',nrow(fim))
cond=fim$trat1==1; cores[cond]='red'
cond=fim$trat2==1; cores[cond]='blue'
rango=c(floor1,ceil1)
plot(fim$pr,fim$po,col=cores,xlim=rango,ylim=rango)
lines(rango,rango,col='grey',lwd=2)
#output results
setwd('U:\\GIT_models\\ceiling_effect')
write.csv(fim,'fake data.csv',row.names=F)
rm(list=ls())
library('mvtnorm')
set.seed(1)
#get data
setwd('U:\\GIT_models\\ceiling_effect')
source('gibbs_ceiling_functions.R')
source('gibbs_ceiling_master.R')
dat=read.csv('fake data.csv',as.is=T)
covs.main=c('trat1','trat2','semester')
covs.interact=c('trat1','trat2')
#basic settings
ceil1=6
floor1=0
#priors
var.betas=rep(10,6)
ngibbs=10000
mod=tobit.pre.post(dat=dat,ceil1=ceil1,floor1=floor1,
covs.main=covs.main,covs.interact=covs.interact,
var.betas=var.betas,ngibbs=ngibbs)
set.seed(101)
nobs=100
ceil1=6
floor1=0
mu.true=mu=5
tau2.true=tau2=3
sig2.true=sig2=0.3
#generate pre-scores
pr=pr.true=rnorm(nobs,mean=mu,sd=sqrt(tau2))
cond=pr>ceil1;  sum(cond); pr[cond]=ceil1
cond=pr<floor1; sum(cond); pr[cond]=floor1
#generate xmat
uniq=expand.grid(trat1=0:1,trat2=0:1,semester=0:1)
cond=uniq$trat1==1 & uniq$trat2==1
uniq=uniq[!cond,]
ind=sample(1:nrow(uniq),size=nobs,replace=T)
xmat.main=data.matrix(cbind(1,uniq[ind,]))
colnames(xmat.main)[1]='interc'
#generate xmat associated with pr
xmat.interact=cbind(1,xmat.main[,c('trat1','trat2')])
xmat.pr=xmat.interact*pr
xmat.pr.true=xmat.interact*pr.true
#parameters
betas.true=betas=c(0,0,-0.5,0.1)
gammas.true=gammas=c(1,0.2,0)
#generate data
media=xmat.main%*%betas+xmat.pr.true%*%gammas
po=po.true=rnorm(nobs,mean=media,sd=sqrt(sig2))
cond=po>ceil1;  sum(cond); po[cond]=ceil1
cond=po<floor1; sum(cond); po[cond]=floor1
#final dataset
fim=data.frame(po=po,pr=pr,xmat.main[,-1])
#visualize these results
cores=rep('black',nrow(fim))
cond=fim$trat1==1; cores[cond]='red'
cond=fim$trat2==1; cores[cond]='blue'
rango=c(floor1,ceil1)
plot(fim$pr,fim$po,col=cores,xlim=rango,ylim=rango)
lines(rango,rango,col='grey',lwd=2)
store.betas=mod$betas
store.others=cbind(mod$sig2,mod$mu,mod$tau2)
round(cor(store.betas),2)
par(mfrow=c(3,2))
param.true=c(betas.true,gammas.true)
for (i in 1:ncol(store.betas)){
plot(store.betas[,i],type='l')
abline(h=param.true[i],col='red')
}
store.betas=mod$betas
store.others=cbind(mod$sig2,mod$mu,mod$tau2)
round(cor(store.betas),2)
par(mfrow=c(3,3))
param.true=c(betas.true,gammas.true)
for (i in 1:ncol(store.betas)){
plot(store.betas[,i],type='l')
abline(h=param.true[i],col='red')
}
par(mfrow=c(3,3),mar=rep(1,4))
param.true=c(betas.true,gammas.true)
for (i in 1:ncol(store.betas)){
plot(store.betas[,i],type='l')
abline(h=param.true[i],col='red')
}
par(mfrow=c(2,2))
others.true=c(sig2.true,mu.true,tau2.true)
for (i in 1:ncol(store.others)){
plot(store.others[,i],type='l')
abline(h=others.true[i],col='red')
}
rm(list=ls())
library('mvtnorm')
set.seed(1)
#get data
setwd('U:\\GIT_models\\ceiling_effect')
source('gibbs_ceiling_functions.R')
source('gibbs_ceiling_master.R')
dat=read.csv('fake data.csv',as.is=T)
covs.main=c('trat1','trat2','semester')
covs.interact=c('trat1','trat2')
#basic settings
ceil1=6
floor1=0
#priors
var.betas=rep(10,6)
ngibbs=10000
mod=tobit.pre.post(dat=dat,ceil1=ceil1,floor1=floor1,
covs.main=covs.main,covs.interact=covs.interact,
var.betas=var.betas,ngibbs=ngibbs)
rm(list=ls())
set.seed(101)
nobs=100
ceil1=6
floor1=0
mu.true=mu=5
tau2.true=tau2=3
sig2.true=sig2=0.3
#generate pre-scores
pr=pr.true=rnorm(nobs,mean=mu,sd=sqrt(tau2))
cond=pr>ceil1;  sum(cond); pr[cond]=ceil1
cond=pr<floor1; sum(cond); pr[cond]=floor1
#generate xmat
uniq=expand.grid(trat1=0:1,trat2=0:1,semester=0:1)
cond=uniq$trat1==1 & uniq$trat2==1
uniq=uniq[!cond,]
ind=sample(1:nrow(uniq),size=nobs,replace=T)
xmat.main=data.matrix(cbind(1,uniq[ind,]))
colnames(xmat.main)[1]='interc'
#generate xmat associated with pr
xmat.interact=cbind(1,xmat.main[,c('trat1','trat2')])
xmat.pr=xmat.interact*pr
xmat.pr.true=xmat.interact*pr.true
#parameters
betas.true=betas=c(0,0,-0.5,0.1)
gammas.true=gammas=c(1,0.2,0)
head(xmat.main)
rm(list=ls())
set.seed(101)
nobs=100
ceil1=6
floor1=0
mu.true=mu=5
tau2.true=tau2=3
sig2.true=sig2=0.3
#generate pre-scores
pr=pr.true=rnorm(nobs,mean=mu,sd=sqrt(tau2))
cond=pr>ceil1;  sum(cond); pr[cond]=ceil1
cond=pr<floor1; sum(cond); pr[cond]=floor1
#generate xmat
uniq=expand.grid(trat1=0:1,trat2=0:1,semester=0:1)
cond=uniq$trat1==1 & uniq$trat2==1
uniq=uniq[!cond,]
ind=sample(1:nrow(uniq),size=nobs,replace=T)
xmat.main=data.matrix(cbind(1,uniq[ind,]))
colnames(xmat.main)[1]='interc'
#generate xmat associated with pr
xmat.interact=cbind(1,xmat.main[,c('trat1','trat2')])
xmat.pr=xmat.interact*pr
xmat.pr.true=xmat.interact*pr.true
#parameters
betas.true=betas=c(0,0,-0.5,0.1)
gammas.true=gammas=c(1,0.2,0)
#generate data
media=xmat.main%*%betas+xmat.pr.true%*%gammas
po=po.true=rnorm(nobs,mean=media,sd=sqrt(sig2))
cond=po>ceil1;  sum(cond); po[cond]=ceil1
cond=po<floor1; sum(cond); po[cond]=floor1
#final dataset
fim=data.frame(po=po,pr=pr,xmat.main[,-1])
#visualize these results
cores=rep('black',nrow(fim))
cond=fim$trat1==1; cores[cond]='red'
cond=fim$trat2==1; cores[cond]='blue'
rango=c(floor1,ceil1)
plot(fim$pr,fim$po,col=cores,xlim=rango,ylim=rango)
lines(rango,rango,col='grey',lwd=2)
#output results
setwd('U:\\GIT_models\\ceiling_effect')
write.csv(fim,'fake data.csv',row.names=F)
rm(list=ls())
library('mvtnorm')
set.seed(1)
#get data
setwd('U:\\GIT_models\\ceiling_effect')
source('gibbs_ceiling_functions.R')
source('gibbs_ceiling_master.R')
dat=read.csv('fake data.csv',as.is=T)
covs.main=c('trat1','trat2','semester')
covs.interact=c('trat1','trat2')
#basic settings
ceil1=6
floor1=0
#priors
var.betas=rep(10,6)
ngibbs=10000
mod=tobit.pre.post(dat=dat,ceil1=ceil1,floor1=floor1,
covs.main=covs.main,covs.interact=covs.interact,
var.betas=var.betas,ngibbs=ngibbs)
rm(list=ls())
library('mvtnorm')
set.seed(1)
#get data
setwd('U:\\GIT_models\\ceiling_effect')
source('gibbs_ceiling_functions.R')
source('gibbs_ceiling_master.R')
dat=read.csv('fake data.csv',as.is=T)
covs.main=c('trat1','trat2','semester')
covs.interact=c('trat1','trat2')
#basic settings
ceil1=6
floor1=0
#priors
var.betas=rep(10,6)
ngibbs=10000
mod=tobit.pre.post(dat=dat,ceil1=ceil1,floor1=floor1,
covs.main=covs.main,covs.interact=covs.interact,
var.betas=var.betas,ngibbs=ngibbs)
head(mod$betas)
rm(list=ls())
library('mvtnorm')
set.seed(1)
#get data
setwd('U:\\GIT_models\\ceiling_effect')
source('gibbs_ceiling_functions.R')
source('gibbs_ceiling_master.R')
dat=read.csv('fake data.csv',as.is=T)
covs.main=c('trat1','trat2','semester')
covs.interact=c('trat1','trat2')
#basic settings
ceil1=6
floor1=0
#priors
var.betas=rep(10,6)
ngibbs=10000
mod=tobit.pre.post(dat=dat,ceil1=ceil1,floor1=floor1,
covs.main=covs.main,covs.interact=covs.interact,
var.betas=var.betas,ngibbs=ngibbs)
colnames(mod$betas)
set.seed(101)
nobs=100
ceil1=6
floor1=0
mu.true=mu=5
tau2.true=tau2=3
sig2.true=sig2=0.3
#generate pre-scores
pr=pr.true=rnorm(nobs,mean=mu,sd=sqrt(tau2))
cond=pr>ceil1;  sum(cond); pr[cond]=ceil1
cond=pr<floor1; sum(cond); pr[cond]=floor1
#generate xmat
uniq=expand.grid(trat1=0:1,trat2=0:1,semester=0:1)
cond=uniq$trat1==1 & uniq$trat2==1
uniq=uniq[!cond,]
ind=sample(1:nrow(uniq),size=nobs,replace=T)
xmat.main=data.matrix(cbind(1,uniq[ind,]))
colnames(xmat.main)[1]='interc'
#generate xmat associated with pr
xmat.interact=cbind(1,xmat.main[,c('trat1','trat2')])
xmat.pr=xmat.interact*pr
xmat.pr.true=xmat.interact*pr.true
#parameters
betas.true=betas=c(0,0,-0.5,0.1)
gammas.true=gammas=c(1,0.2,0)
#generate data
media=xmat.main%*%betas+xmat.pr.true%*%gammas
po=po.true=rnorm(nobs,mean=media,sd=sqrt(sig2))
cond=po>ceil1;  sum(cond); po[cond]=ceil1
cond=po<floor1; sum(cond); po[cond]=floor1
#final dataset
fim=data.frame(po=po,pr=pr,xmat.main[,-1])
#visualize these results
cores=rep('black',nrow(fim))
cond=fim$trat1==1; cores[cond]='red'
cond=fim$trat2==1; cores[cond]='blue'
rango=c(floor1,ceil1)
plot(fim$pr,fim$po,col=cores,xlim=rango,ylim=rango)
lines(rango,rango,col='grey',lwd=2)
store.betas=mod$betas
store.others=cbind(mod$sig2,mod$mu,mod$tau2)
round(cor(store.betas),2)
par(mfrow=c(3,3),mar=rep(1,4))
param.true=c(betas.true,gammas.true)
for (i in 1:ncol(store.betas)){
plot(store.betas[,i],type='l')
abline(h=param.true[i],col='red')
}
par(mfrow=c(2,2))
others.true=c(sig2.true,mu.true,tau2.true)
for (i in 1:ncol(store.others)){
plot(store.others[,i],type='l')
abline(h=others.true[i],col='red')
}
